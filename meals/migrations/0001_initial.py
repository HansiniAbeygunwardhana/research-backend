# Generated by Django 4.2.6 on 2023-10-10 03:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('calories', models.FloatField(default=0)),
                ('carbohydrateContent', models.FloatField(default=0)),
                ('cholesterolContent', models.FloatField(default=0)),
                ('fatContent', models.FloatField(default=0)),
                ('fiberContent', models.FloatField(default=0)),
                ('proteinContent', models.FloatField(default=0)),
                ('saturatedFatContent', models.FloatField(default=0)),
                ('sodiumContent', models.FloatField(default=0)),
                ('sugarContent', models.FloatField(default=0)),
                ('image', models.CharField(max_length=100)),
                ('price', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ingredients', models.ManyToManyField(related_name='ingredients', to='meals.ingredient')),
                ('keywords', models.ManyToManyField(related_name='keywords', to='meals.keyword')),
            ],
        ),
    ]
